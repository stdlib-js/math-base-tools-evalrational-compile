{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar join = require( 'path' ).join;\nvar readFile = require( '@stdlib/fs-read-file' ).sync;\nvar replace = require( '@stdlib/string-replace' );\nvar isInteger = require( '@stdlib/assert-is-integer' ).isPrimitive;\nvar Float32Array = require( '@stdlib/array-float32' );\nvar float64ToFloat32 = require( '@stdlib/number-float64-base-to-float32' );\n\n\n// VARIABLES //\n\nvar opts = {\n\t'encoding': 'utf8'\n};\nvar dir = join( __dirname, 'templates' );\n\n// Templates:\nvar COEFFICIENT_RATIO_TEMPLATE = readFile( join( dir, 'coefficient_ratio.js.txt' ), opts ); // eslint-disable-line id-length\n\nvar EVALRATIONAL_TEMPLATE = readFile( join( dir, 'evalrational.js.txt' ), opts );\nvar EVALRATIONAL_FLOAT32_TEMPLATE = readFile( join( dir, 'evalrational.float32.js.txt' ), opts ); // eslint-disable-line id-length\n\nvar LOOP_TEMPLATE = readFile( join( dir, 'loop.js.txt' ), opts );\nvar LOOP_FLOAT32_TEMPLATE = readFile( join( dir, 'loop.float32.js.txt' ), opts );\n\nvar NAN_TEMPLATE = readFile( join( dir, 'nan.js.txt' ), opts );\n\nvar MAX_CHARS = 66; // max-len (80) - chars already in line ('2x tab': 8, 's1 = ': 5, ';': 1)\n\n\n// FUNCTIONS //\n\n/**\n* Serializes a single value to a string.\n*\n* @private\n* @param {number} x - value to serialize\n* @returns {string} serialized value\n*/\nfunction value2string( x ) {\n\tvar str = x.toString();\n\tif ( isInteger( x ) ) {\n\t\tstr += '.0';\n\t}\n\treturn str;\n}\n\n/**\n* Serializes an array of numbers to an indented newline separated list.\n*\n* @private\n* @param {NumericArray} x - array of numbers\n* @returns {string} serialized value\n*/\nfunction array2list( x ) {\n\tvar str;\n\tvar n;\n\tvar m;\n\tvar i;\n\n\tn = x.length;\n\tm = n - 1;\n\tstr = '';\n\tfor ( i = 0; i < n; i++ ) {\n\t\tstr += '\\t' + x[ i ].toString();\n\t\tif ( isInteger( x[ i ] ) ) {\n\t\t\tstr += '.0';\n\t\t}\n\t\tif ( i < m ) {\n\t\t\tstr += ',\\n';\n\t\t}\n\t}\n\treturn str;\n}\n\n/**\n* Serializes an array of coefficients to a string implementing Horner's method.\n*\n* @private\n* @param {NumericArray} x - coefficients sorted in ascending degree\n* @param {string} dtype - input value floating-point data type\n* @returns {string} output string\n*/\nfunction hornerAscending( x, dtype ) {\n\tvar str;\n\tvar n;\n\tvar m;\n\tvar i;\n\n\tn = x.length;\n\tm = n - 1;\n\tif ( dtype === 'float32' ) {\n\t\tstr = 'float64ToFloat32(';\n\t} else {\n\t\tstr = '';\n\t}\n\tstr += x[ 0 ].toString();\n\tif ( isInteger( x[ 0 ] ) ) {\n\t\tstr += '.0';\n\t}\n\tfor ( i = 1; i < n; i++ ) {\n\t\tif ( dtype === 'float32' ) {\n\t\t\tstr += ' + float64ToFloat32(x * ';\n\t\t\tif ( i < m ) {\n\t\t\t\tstr += 'float64ToFloat32(';\n\t\t\t}\n\t\t} else {\n\t\t\tstr += ' + (x * ';\n\t\t\tif ( i < m ) {\n\t\t\t\tstr += '(';\n\t\t\t}\n\t\t}\n\t\tstr += x[ i ].toString();\n\t\tif ( isInteger( x[ i ] ) ) {\n\t\t\tstr += '.0';\n\t\t}\n\t}\n\t// Close all the parentheses...\n\tfor ( i = 0; i < (2*m)-1; i++ ) {\n\t\tstr += ')';\n\t}\n\tif ( dtype === 'float32' ) {\n\t\tstr += ')';\n\t}\n\treturn str;\n}\n\n/**\n* Serializes an array of coefficients to a string implementing Horner's method.\n*\n* @private\n* @param {NumericArray} x - coefficients sorted in descending degree\n* @param {string} dtype - input value floating-point data type\n* @returns {string} output string\n*/\nfunction hornerDescending( x, dtype ) {\n\tvar str;\n\tvar m;\n\tvar i;\n\n\tm = x.length - 1;\n\tif ( dtype === 'float32' ) {\n\t\tstr = 'float64ToFloat32(';\n\t} else {\n\t\tstr = '';\n\t}\n\tstr += x[ m ].toString();\n\tif ( isInteger( x[ m ] ) ) {\n\t\tstr += '.0';\n\t}\n\tfor ( i = m-1; i >= 0; i-- ) {\n\t\tif ( dtype === 'float32' ) {\n\t\t\tstr += ' + float64ToFloat32(x * ';\n\t\t\tif ( i > 0 ) {\n\t\t\t\tstr += 'float64ToFloat32(';\n\t\t\t}\n\t\t} else {\n\t\t\tstr += ' + (x * ';\n\t\t\tif ( i > 0 ) {\n\t\t\t\tstr += '(';\n\t\t\t}\n\t\t}\n\t\tstr += x[ i ].toString();\n\t\tif ( isInteger( x[ i ] ) ) {\n\t\t\tstr += '.0';\n\t\t}\n\t}\n\t// Close all the parentheses...\n\tfor ( i = 0; i < (2*m)-1; i++ ) {\n\t\tstr += ')';\n\t}\n\tif ( dtype === 'float32' ) {\n\t\tstr += ')';\n\t}\n\treturn str;\n}\n\n/**\n* Replaces the specified tag in a source string by the chosen replacement and adds directive to disable the maximum line length lint rule if necessary.\n*\n* @private\n* @param {string} src - source string\n* @param {string} target - target tag\n* @param {string} str - replacement\n* @returns {string} output string\n*/\nfunction replaceString( src, target, str ) {\n\tvar out = replace( src, '{{'+target+'}}', str );\n\tif ( str.length > MAX_CHARS ) {\n\t\tout = replace( out, '{{'+target+'_ESLINT}}', ' // eslint-disable-line max-len' );\n\t} else {\n\t\tout = replace( out, '{{'+target+'_ESLINT}}', '' );\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Compiles a module string which exports a function for evaluating a rational function.\n*\n* @param {NumericArray} P - numerator polynomial coefficients sorted in ascending degree\n* @param {NumericArray} Q - denominator polynomial coefficients sorted in ascending degree\n* @param {Options} [options] - function options\n* @param {string} [options.dtype='float64'] - input value floating-point data type\n* @returns {string} module string exporting a function for evaluating a rational function\n*\n* @example\n* var P = [ -6.0, -5.0 ];\n* var Q = [ 3.0, 0.5 ];\n*\n* var str = compile( P, Q );\n* // returns <string>\n*/\nfunction compile( P, Q, options ) {\n\tvar opts;\n\tvar tmpl;\n\tvar str;\n\tvar n;\n\tvar r;\n\n\topts = {\n\t\t'dtype': 'float64'\n\t};\n\tif ( arguments.length > 2 ) {\n\t\topts.dtype = options.dtype || opts.dtype;\n\t}\n\tn = P.length;\n\n\t// If no coefficients, the function always returns NaN...\n\tif ( n === 0 ) {\n\t\treturn NAN_TEMPLATE;\n\t}\n\t// If P and Q have different lengths, the function always returns NaN...\n\tif ( n !== Q.length ) {\n\t\treturn NAN_TEMPLATE;\n\t}\n\tr = P[0] / Q[0];\n\tif ( opts.dtype === 'float32' ) {\n\t\tP = new Float32Array( P );\n\t\tQ = new Float32Array( Q );\n\t\tr = float64ToFloat32( r );\n\t}\n\t// If P and Q only have one coefficient, the function always returns the ratio of those coefficients...\n\tif ( n === 1 ) {\n\t\treturn replace( COEFFICIENT_RATIO_TEMPLATE, '{{ratio}}', value2string( r ) );\n\t}\n\t// Avoid exceeding the maximum stack size on V8 by using a simple loop :(. Note that the choice of `500` was empirically determined...\n\tif ( n > 500 ) {\n\t\tif ( opts.dtype === 'float32' ) {\n\t\t\ttmpl = LOOP_FLOAT32_TEMPLATE;\n\t\t} else {\n\t\t\ttmpl = LOOP_TEMPLATE;\n\t\t}\n\t\tstr = replace( tmpl, '{{P}}', array2list( P ) );\n\t\tstr = replace( str, '{{Q}}', array2list( Q ) );\n\t\treturn replace( str, '{{ratio}}', value2string( r ) );\n\t}\n\t// If more than one coefficient, apply Horner's method...\n\tif ( opts.dtype === 'float32' ) {\n\t\ttmpl = EVALRATIONAL_FLOAT32_TEMPLATE;\n\t} else {\n\t\ttmpl = EVALRATIONAL_TEMPLATE;\n\t}\n\tstr = replaceString( tmpl, 'P_ASCENDING', hornerAscending( P, opts.dtype ) );\n\tstr = replaceString( str, 'Q_ASCENDING', hornerAscending( Q, opts.dtype ) );\n\tstr = replaceString( str, 'P_DESCENDING', hornerDescending( P, opts.dtype ) );\n\tstr = replaceString( str, 'Q_DESCENDING', hornerDescending( Q, opts.dtype ) );\n\treturn replace( str, '{{ratio}}', value2string( r ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = compile;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compile a module for evaluating a rational function.\n*\n* @module @stdlib/math-base-tools-evalrational-compile\n*\n* @example\n* var compile = require( '@stdlib/math-base-tools-evalrational-compile' );\n*\n* var P = [ -6.0, -5.0 ];\n* var Q = [ 3.0, 0.5 ];\n*\n* var str = compile( P, Q ); // ( -6*6^0 - 5*6^1 ) / ( 3*6^0 + 0.5*6^1 )\n* // returns <string>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "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",
  "names": ["require_main", "__commonJSMin", "exports", "module", "join", "readFile", "replace", "isInteger", "Float32Array", "float64ToFloat32", "opts", "dir", "COEFFICIENT_RATIO_TEMPLATE", "EVALRATIONAL_TEMPLATE", "EVALRATIONAL_FLOAT32_TEMPLATE", "LOOP_TEMPLATE", "LOOP_FLOAT32_TEMPLATE", "NAN_TEMPLATE", "MAX_CHARS", "value2string", "x", "str", "array2list", "n", "m", "hornerAscending", "dtype", "i", "hornerDescending", "replaceString", "src", "target", "out", "compile", "P", "Q", "options", "tmpl", "r", "main"]
}
